library()
x <- rnorm(100) y <- 2 + 3 * x + rnorm(100) * 0.5 str(x)
x <- rnorm(100) y <- 2 + 3 * x + rnorm(100) *str(x)/2
x <- rnorm(100)
y <- 2 + 3 * x + rnorm(100) *str(x)/2
str(x)
str(y)
x <- rnorm(100) y <- 2 + 3*x + rnorm(100)*str(x)/2
x <- rnorm(100); y <- 2 + 3*x + rnorm(100)*str(x)/2
model1 <- lm(y ~ x)
model1 <- lm(y~x)
str(x)
str(y)
y <- 2 + 3*x + rnorm(100)*str(x)/2
str(y)
y = rnorm(5); x = y[1:4]
lm(y~x)
y = rnorm(5); x = y[1:5]
lm(y~x)
“plot(x, y, main = "Simple linear regression")
abline(model1$coefficients, col = "blue")”
Excerpt From: Kun Ren, Selva Prabhakaran. “R - Programming and Data Science.” iBooks.
plot(x, y, main = "Simple linear regression")
abline(model1$coefficients, col = "blue")
teams <- read_csv("data/team_standings.csv")
install.packages("readr")
teams <- read_csv("data/team_standings.csv")
library(readr)
teams <- read_csv("data/team_standings.csv")
load("~/.RData")
teams <- read_csv("data/team_standings.csv")
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type="b")
install.packages("KernSmooth")
library(KernSmooth)
?i()
?I()
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
coefTable <- coef(summary(fit))
coefTable
(pval <- coefTable[2, 4])
summary(fit)$sigma
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
fit_car <- lm(y ~ x)
predict(fit_car, newdata = data.frame(x = mean(x)), interval = ("confidence"))
yhat <- fit_car$coef[1] + fit_car$coef[2] * mean(x)
yhat + c(-1, 1) * qt(.975, df = fit_car$df) * summary(fit_car)$sigma / sqrt(length(y))
?mtcars
predict(fit_car, newdata = data.frame(x = 3), interval = ("prediction"))
fit_car2 <- lm(y ~ I(x/2))
sumCoef2 <- coef(summary(fit_car2))
(sumCoef2[2,1] + c(-1, 1) * qt(.975, df = fit_car2$df) * sumCoef2[2, 2])
fit <- lm(y ~ x)
fit
qplot(Species, Petal.Length, data=iris, geom="boxplot",
fill=Species)
library(ggplot)
install.packages("library(ggplot)")
library(ggplot)
library(ggplot2)
qplot(Species, Petal.Length, data=iris, geom="boxplot",
fill=Species)
unique(species)
unique(Species)
unique(iris$Species)
qplot(Petal.Length, data=iris, geom="density", alpha=I(.7),
fill=Species)
install.packages("vcd")
library(vcd)
mosaic(Freq ~ Gender + Admit, data=ucba,
shade=TRUE, legend=FALSE)
data(ucba)
ucba <- data.frame(UCBAdmissions)
data(ucba)
mosaic(Freq ~ Gender + Admit, data=ucba,
shade=TRUE, legend=FALSE)
f <- function(x){ dnorm(x, mean=65, sd=3.5) }
f
integrate(f, 70, Inf)
?integrate()
getwd()
getwd("/Users/Mohamed/DS/datasciencecoursera/practical-machine-learning/project")
getwd()
setwd("/Users/Mohamed/DS/datasciencecoursera/practical-machine-learning/project")
getwd()
list.files()
names(pml-training.csv)
knitr::opts_chunk$set(echo = TRUE)
install.packages('versions')
install.packages("rattle")
install.packages("rattle")
install.packages("https://cran.r-project.org/src/contrib/Archive/RGtk2/RGtk2_2.20.31.tar.gz", repos=NULL)
install.packages("rattle")
https://cran.rstudio.com/bin/macosx/mavericks/contrib/3.3/rattle_5.1.0.tgz
install.packages('versions')
install.versions(rattle, <5.1.0>)
install.versions(rattle, 5.1.0)
install.versions(rattle, v.5.1.0)
package_version(rattle, v.5.1.0)
install.packages("RGtk2", depen=T)
install.packages("rattle")
install.packages("RGtk2", depen=T)
package_version("rattle", "5.1.0")
install_version("rattle", "5.1.0")
library(devtools)
install_version("rattle", "5.1.0")
install.packages("rattle")
library(rattle)
install.packages("RGtk2")
install.packages("RGtk2", type="source")
